name: 'Body Tag Extractor'
author: 'TheBurchBlog'
description: 'The goal is to utilize tags like `fixes:` and expose the values through environment variables.'
branding:
  icon: 'search'
  color: 'blue'

inputs:
  tag:
    description: 'The tag placed inside the Body of the Issue or Pull Request before the value is defined'
    required: false
    default: 'body-tag:'
  env-variable:
    description: 'The environment variable to map the tag value to'
    required: false
    default: 'body-tag'
  default-value:
    description: 'If the tag is not found, the default value to be provided'
    required: false
    default: null
  tag-position:
    description: 'If multiple tags are found, which tag position should be returned (-1 = last). If tag position is higher than found, the default value is provided' 
    required: false
    default: -1

runs:
  using: "composite"
  steps:
    - name: Extract Issue Tag
      env:
        ISSUE_CONTAINS_TAG : ${{contains(github.event.issue.body, inputs.tag)}}
        PR_CONTAINS_TAG : ${{contains(github.event.pull_request.body, inputs.tag)}}
      run: |
        RETURN_TAG=${{inputs.default-value}}
        if $ISSUE_CONTAINS_TAG
        then

          # Handling Marking Values
          BODY = $(echo ${{ github.event.issue.body}} | sed 's/\r$/ /g; s/|//g')

          TAGS=$(echo $BODY | grep -Po "(?<=${{inputs.tag}}\s)(\w+)")
          echo $TAGS  
          i=0    
          for tag in $TAGS
          do
            echo "Loop $i $tag"
            if [[ "${{inputs.tag-position}}" -eq -1 ]]
            then
              RETURN_TAG=$tag
            elif [[ ${{inputs.tag-position}} -eq $i ]]
            then
              RETURN_TAG=$tag
              break
            fi
            i=$((i+1))
          done
        fi
        if $PR_CONTAINS_TAG
        then
          TAGS=$(echo ${{ github.event.pull_request.body }} | sed 's/\\r/ /g' | sed 's/\\n/ /g' | grep -Po "(?<=${{inputs.tag}}\s)(\w+)")
          echo $TAGS  
          i=0    
          for tag in $TAGS
          do
            echo "Loop $i $tag"
            if [[ "${{inputs.tag-position}}" -eq -1 ]]
            then
              RETURN_TAG=$tag
            elif [[ ${{inputs.tag-position}} -eq $i ]]
            then
              RETURN_TAG=$tag
              break
            fi
            i=$((i+1))
          done
        fi
        echo "${{inputs.env-variable}}=$RETURN_TAG" >> $GITHUB_ENV
      shell: bash

